buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'

apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'eclipse'


group = "com.vonage"
archivesBaseName = "client"
version = "5.5.0"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
}

dependencies {
    compile 'commons-codec:commons-codec:1.9'
    compile 'commons-logging:commons-logging:1.2'
    compile 'org.apache.httpcomponents:httpclient:4.5.8'
    compile 'commons-io:commons-io:2.5'
    compile 'org.apache.commons:commons-lang3:3.5'
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    compile 'io.openapitools.jackson.dataformat:jackson-dataformat-hal:1.0.4'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile "com.nexmo:jwt:1.0.1"

    testCompile "javax.servlet:javax.servlet-api:3.1.0"
    testCompile 'junit:junit:4.4'
    testCompile "org.mockito:mockito-core:2.25.1"
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.7'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.7'
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

javadoc {
    /* info for JavaDoc options http://docs.oracle.com/javase/6/docs/technotes/tools/windows/javadoc.html#overviewcomment */
    title "Vonage Java Server SDK"
    // uncomment this to use a custom javadoc overview
    //options.overview = file("src/main/javadoc/overview.html")
    // uncomment this to use the custom javadoc styles
    //options.stylesheetFile = file("src/main/javadoc/css/styles.css")
    //exclude "..."
    options.linkSource = true
}

jar {
    manifest {
        attributes(
                "Created-By": 'Vonage',
                'Implementation-Vendor': 'Vonage',
                'Implementation-Title': 'Vonage Java Server SDK',
                'Implementation-Version': version
        )
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc
}
assemble.dependsOn javadocJar

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(
                        userName: project.properties["maven.username"] ?: "",
                        password: project.properties["maven.password"] ?: ""
                )
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(
                        userName: project.properties["maven.username"] ?: "",
                        password: project.properties["maven.password"] ?: ""
                )
            }
            pom.project {
                name 'Vonage Java Server SDK'
                packaging 'jar'
                artifactId 'client'
                description 'Java client for Vonage APIs'
                url 'https://github.com/Vonage/vonage-java-sdk/'
                scm {
                    connection 'scm:git:git@github.com:Vonage/vonage-java-sdk'
                    developerConnection 'scm:git:git@github.com:Vonage/vonage-java-sdk'
                    url 'http://github.com/Vonage/vonage-java-sdk'
                }
                licenses {
                    license {
                        name 'Apache 2.0'
                        url 'https://raw.github.com/Vonage/vonage-java-sdk/master/LICENCE.txt'
                    }
                }
                organization {
                    name 'Vonage'
                    url 'https://developer.nexmo.com'
                }
                issueManagement {
                    system 'GitHub'
                    url 'https://github.com/Vonage/vonage-java-sdk/issues'
                }
                developers {
                    developer {
                        id 'devrel'
                        name 'Vonage Developer Relations Team'
                        email 'devrel@vonage.com'
                    }
                }
            }
        }
    }
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

task zip(type: Zip) {
    from configurations.runtime.allArtifacts.files
    from configurations.runtime
    into(project.name + '-' + project.version)
}

task depJar(type: Jar, dependsOn: configurations.runtime) {
    baseName = archivesBaseName + '-with-dependencies'
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
